{"version":3,"sources":["styles/Box.js","styles/Button.js","styles/FormField.js","styles/Input.js","styles/Label.js","styles/Textarea.js","styles/Error.js","components/NavBar.js","components/LoginForm.js","components/SignUpForm.js","pages/Login.js","pages/RecipeList.js","pages/NewRecipe.js","components/App.js","index.js"],"names":["Box","styled","div","COLORS","primary","secondary","ButtonBase","button","FillButton","OutlineButton","Button","Component","variant","color","props","style","FormField","Input","input","Label","label","Textarea","textarea","Wrapper","Alert","span","Message","p","Error","children","header","Logo","h1","Nav","nav","NavBar","user","setUser","to","as","Link","onClick","fetch","method","then","r","ok","LoginForm","onLogin","useState","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","onSubmit","e","preventDefault","headers","body","JSON","stringify","json","err","htmlFor","type","id","autoComplete","value","onChange","target","map","SignUpForm","passwordConfirmation","setPasswordConfirmation","imageUrl","setImageUrl","bio","setBio","password_confirmation","image_url","rows","section","Divider","hr","Login","showLogin","setShowLogin","Recipe","article","RecipeList","recipes","setRecipes","useEffect","length","recipe","title","minutes_to_complete","instructions","WrapperChild","NewRecipe","setTitle","minutesToComplete","setMinutesToComplete","setInstructions","history","useHistory","push","App","path","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d73499bb.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Box = styled.div`\n  border-radius: 6px;\n  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%),\n    0 0 0 1px rgb(10 10 10 / 2%);\n  padding: 16px;\n`;\n\nexport default Box;\n","import styled from \"styled-components\";\n\nconst COLORS = {\n  primary: {\n    \"--main\": \"indigo\",\n    \"--accent\": \"white\",\n  },\n  secondary: {\n    \"--main\": \"lavenderblush\",\n    \"--accent\": \"indigo\",\n  },\n};\n\nfunction Button({ variant = \"fill\", color = \"primary\", ...props }) {\n  let Component;\n  if (variant === \"fill\") {\n    Component = FillButton;\n  } else if (variant === \"outline\") {\n    Component = OutlineButton;\n  }\n\n  return <Component style={COLORS[color]} {...props} />;\n}\n\nconst ButtonBase = styled.button`\n  cursor: pointer;\n  font-size: 1rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  padding: 8px 16px;\n  text-decoration: none;\n`;\n\nconst FillButton = styled(ButtonBase)`\n  background-color: var(--main);\n  color: var(--accent);\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst OutlineButton = styled(ButtonBase)`\n  background-color: white;\n  color: var(--main);\n  border: 2px solid var(--main);\n\n  &:hover {\n    background: hsl(235deg 85% 97%);\n  }\n`;\n\nexport default Button;\n","import styled from \"styled-components\";\n\nconst FormField = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport default FormField;\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n`;\n\nexport default Input;\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  color: #363636;\n  display: block;\n  font-size: 1rem;\n  font-weight: 700;\n  margin-bottom: 8px;\n`;\n\nexport default Label;\n","import styled from \"styled-components\";\n\nconst Textarea = styled.textarea`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n  resize: none;\n`;\n\nexport default Textarea;\n","import styled from \"styled-components\";\n\nfunction Error({ children }) {\n  return (\n    <Wrapper>\n      <Alert>!</Alert>\n      <Message>{children}</Message>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  color: red;\n  background-color: mistyrose;\n  border-radius: 6px;\n  display: flex;\n  padding: 8px;\n  align-items: center;\n  gap: 8px;\n  margin: 8px 0;\n`;\n\nconst Alert = styled.span`\n  background-color: white;\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n  font-weight: bold;\n  display: grid;\n  place-content: center;\n`;\n\nconst Message = styled.p`\n  margin: 0;\n`;\n\nexport default Error;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Button } from \"../styles\";\n\nfunction NavBar({ user, setUser }) {\n  function handleLogoutClick() {\n    fetch(\"/api/logout\", { method: \"DELETE\" }).then((r) => {\n      if (r.ok) {\n        setUser(null);\n      }\n    });\n  }\n\n  return (\n    <Wrapper>\n      <Logo>\n        <Link to=\"/\">Reciplease</Link>\n      </Logo>\n      <Nav>\n        <Button as={Link} to=\"/new\">\n          New Recipe\n        </Button>\n        <Button variant=\"outline\" onClick={handleLogoutClick}>\n          Logout\n        </Button>\n      </Nav>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n`;\n\nconst Logo = styled.h1`\n  font-family: \"Permanent Marker\", cursive;\n  font-size: 3rem;\n  color: deeppink;\n  margin: 0;\n  line-height: 1;\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n\nconst Nav = styled.nav`\n  display: flex;\n  gap: 4px;\n  position: absolute;\n  right: 8px;\n`;\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\n\nfunction LoginForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button variant=\"fill\" color=\"primary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label, Textarea } from \"../styles\";\n\nfunction SignUpForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch(\"/api/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation,\n        image_url: imageUrl,\n        bio,\n      })\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password Confirmation</Label>\n        <Input\n          type=\"password\"\n          id=\"password_confirmation\"\n          value={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"imageUrl\">Profile Image</Label>\n        <Input\n          type=\"text\"\n          id=\"imageUrl\"\n          value={imageUrl}\n          onChange={(e) => setImageUrl(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"bio\">Bio</Label>\n        <Textarea\n          rows=\"3\"\n          id=\"bio\"\n          value={bio}\n          onChange={(e) => setBio(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n  );\n}\n\nexport default SignUpForm;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport LoginForm from \"../components/LoginForm\";\nimport SignUpForm from \"../components/SignUpForm\";\nimport { Button } from \"../styles\";\n\nfunction Login({ onLogin }) {\n  const [showLogin, setShowLogin] = useState(true);\n\n  return (\n    <Wrapper>\n      <Logo>Reciplease</Logo>\n      {showLogin ? (\n        <>\n          <LoginForm onLogin={onLogin} />\n          <Divider />\n          <p>\n            Don't have an account? &nbsp;\n            <Button color=\"secondary\" onClick={() => setShowLogin(false)}>\n              Sign Up\n            </Button>\n          </p>\n        </>\n      ) : (\n        <>\n          <SignUpForm onLogin={onLogin} />\n          <Divider />\n          <p>\n            Already have an account? &nbsp;\n            <Button color=\"secondary\" onClick={() => setShowLogin(true)}>\n              Log In\n            </Button>\n          </p>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Logo = styled.h1`\n  font-family: \"Permanent Marker\", cursive;\n  font-size: 3rem;\n  color: deeppink;\n  margin: 8px 0 16px;\n`;\n\nconst Wrapper = styled.section`\n  max-width: 500px;\n  margin: 40px auto;\n  padding: 16px;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  border-bottom: 1px solid #ccc;\n  margin: 16px 0;\n`;\n\nexport default Login;\n","import { useEffect, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Box, Button } from \"../styles\";\n\nfunction RecipeList() {\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/api/recipes\")\n      .then((r) => r.json())\n      .then(setRecipes);\n  }, []);\n\n  return (\n    <Wrapper>\n      {recipes.length > 0 ? (\n        recipes.map((recipe) => (\n          <Recipe key={recipe.id}>\n            <Box>\n              <h2>{recipe.title}</h2>\n              <p>\n                <em>Time to Complete: {recipe.minutes_to_complete} minutes</em>\n                &nbsp;·&nbsp;\n                <cite>By {recipe.user.username}</cite>\n              </p>\n              <ReactMarkdown>{recipe.instructions}</ReactMarkdown>\n            </Box>\n          </Recipe>\n        ))\n      ) : (\n        <>\n          <h2>No Recipes Found</h2>\n          <Button as={Link} to=\"/new\">\n            Make a New Recipe\n          </Button>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.section`\n  max-width: 800px;\n  margin: 40px auto;\n`;\n\nconst Recipe = styled.article`\n  margin-bottom: 24px;\n`;\n\nexport default RecipeList;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Button, Error, FormField, Input, Label, Textarea } from \"../styles\";\n\nfunction NewRecipe({ user }) {\n  const [title, setTitle] = useState(\"My Awesome Recipe\");\n  const [minutesToComplete, setMinutesToComplete] = useState(\"30\");\n  const [instructions, setInstructions] = useState(`Here's how you make it.\n  \n## Ingredients\n\n- 1c Sugar\n- 1c Spice\n\n## Instructions\n\n**Mix** sugar and spice. _Bake_ for 30 minutes.\n  `);\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/api/recipes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title,\n        instructions,\n        minutes_to_complete: minutesToComplete,\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        history.push(\"/\");\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <Wrapper>\n      <WrapperChild>\n        <h2>Create Recipe</h2>\n        <form onSubmit={handleSubmit}>\n          <FormField>\n            <Label htmlFor=\"title\">Title</Label>\n            <Input\n              type=\"text\"\n              id=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n          </FormField>\n          <FormField>\n            <Label htmlFor=\"minutesToComplete\">Minutes to complete</Label>\n            <Input\n              type=\"number\"\n              id=\"minutesToComplete\"\n              value={minutesToComplete}\n              onChange={(e) => setMinutesToComplete(e.target.value)}\n            />\n          </FormField>\n          <FormField>\n            <Label htmlFor=\"instructions\">Instructions</Label>\n            <Textarea\n              id=\"instructions\"\n              rows=\"10\"\n              value={instructions}\n              onChange={(e) => setInstructions(e.target.value)}\n            />\n          </FormField>\n          <FormField>\n            <Button color=\"primary\" type=\"submit\">\n              {isLoading ? \"Loading...\" : \"Submit Recipe\"}\n            </Button>\n          </FormField>\n          <FormField>\n            {errors.map((err) => (\n              <Error key={err}>{err}</Error>\n            ))}\n          </FormField>\n        </form>\n      </WrapperChild>\n      <WrapperChild>\n        <h1>{title}</h1>\n        <p>\n          <em>Time to Complete: {minutesToComplete} minutes</em>\n          &nbsp;·&nbsp;\n          <cite>By {user.username}</cite>\n        </p>\n        <ReactMarkdown>{instructions}</ReactMarkdown>\n      </WrapperChild>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.section`\n  max-width: 1000px;\n  margin: 40px auto;\n  padding: 16px;\n  display: flex;\n  gap: 24px;\n`;\n\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n\nexport default NewRecipe;\n","import React, { useEffect, useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Login from \"../pages/Login\";\nimport RecipeList from \"../pages/RecipeList\";\nimport NewRecipe from \"../pages/NewRecipe\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // auto-login\n    fetch(\"/api/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  if (!user) return <Login onLogin={setUser} />;\n\n  return (\n    <>\n      <NavBar user={user} setUser={setUser} />\n      <main>\n        <Switch>\n          <Route path=\"/new\">\n            <NewRecipe user={user} />\n          </Route>\n          <Route path=\"/\">\n            <RecipeList />\n          </Route>\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before, \n  *::after {\n    box-sizing: border-box;\n  }\n\n  html, body {\n    margin: 0;\n  }\n\n  body {\n    font-family: BlinkMacSystemFont,-apple-system,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n  }\n`;\n\nReactDOM.render(\n  <BrowserRouter>\n    <GlobalStyle />\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}